<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!--
    Copyright 2012 The Kuali Foundation

    Licensed under the Educational Community License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

    http://www.opensource.org/licenses/ecl2.php

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
-->
<databaseChangeLog xmlns='http://www.liquibase.org/xml/ns/dbchangelog'
	xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance'
	xsi:schemaLocation='http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-2.0.xsd'>

	<changeSet author="RICE20" id="RICE_SERVER_UPDATES_oracle-mod7" dbms="oracle">

	<sql splitStatements="false"><![CDATA[
	ALTER SESSION ENABLE PARALLEL DML
	]]></sql>
	<sql splitStatements="false"><![CDATA[
	    DECLARE
            	PROCEDURE drop_synonyms IS
		    CURSOR synonyms_cursor IS
                        SELECT synonym_name
			FROM all_synonyms
			WHERE owner = 'PUBLIC' AND (substr(synonym_name, 1, 4) = 'KREW' or substr(synonym_name, 1, 4) = 'KRNS' or substr(synonym_name, 1, 4) = 'KRMS');
            BEGIN
                FOR syn IN synonyms_cursor LOOP
                    EXECUTE IMMEDIATE 'DROP PUBLIC SYNONYM ' || syn.synonym_name;
                END LOOP;
            END;
            BEGIN
                drop_synonyms();
	    END;
	]]></sql>		

		<sql splitStatements="false"><![CDATA[
		-- 
		-- 2011-07-07-m6.sql
		-- 
		--
		-- NOTE: when assembling this script for release, please merge any table rebuilds with those from 2011-04-28.sql
		--
		-----------------------------------------------------------------------------
		-- KREW_DOC_NTE_T
		-----------------------------------------------------------------------------
		ALTER TABLE KREW_DOC_NTE_T RENAME TO TEMP_KREW_DOC_NTE_T
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE TABLE KREW_DOC_NTE_T ( 
		    DOC_NTE_ID    	VARCHAR2(40),
			DOC_HDR_ID    	VARCHAR2(40) NOT NULL,
		    AUTH_PRNCPL_ID	VARCHAR2(40) NOT NULL,
		    CRT_DT        	DATE NOT NULL,
		    TXT           	VARCHAR2(4000) NULL,
		    VER_NBR       	NUMBER(8,0) DEFAULT 0 NULL
		)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		INSERT /*+ APPEND PARALLEL(4) */ INTO KREW_DOC_NTE_T
		(DOC_NTE_ID, DOC_HDR_ID, AUTH_PRNCPL_ID, CRT_DT, TXT, VER_NBR)
		SELECT /*+ PARALLEL(4) */ CAST(DOC_NTE_ID as VARCHAR2(40)), DOC_HDR_ID, AUTH_PRNCPL_ID, CRT_DT, TXT, VER_NBR
		FROM TEMP_KREW_DOC_NTE_T
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		COMMIT
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		ALTER TABLE KREW_DOC_NTE_T ADD CONSTRAINT KREW_DOC_NTE_TP1 PRIMARY KEY (DOC_NTE_ID)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE INDEX KREW_DOC_NTE_TI1 ON KREW_DOC_NTE_T (DOC_HDR_ID)
		]]></sql>
		<!-- 
		<sql splitStatements="false"><![CDATA[
		DECLARE temp NUMBER;
		BEGIN
			SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'TEMP_KREW_DOC_NTE_T';
			IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE TEMP_KREW_DOC_NTE_T CASCADE CONSTRAINTS PURGE'; END IF;
		END;
		]]></sql>
		 -->
		<sql splitStatements="false"><![CDATA[
			DECLARE
				TableName VARCHAR2(30) := 'KREW_ATT_T';
				CURSOR tab_cons IS
					SELECT constraint_name
						FROM user_constraints
						WHERE table_name = TableName 
						  AND constraint_type IN ( 'P', 'U', 'R' );
                CURSOR tab_ind IS
                    SELECT index_name
                        FROM user_indexes
                        WHERE table_name = TableName
                          AND index_type != 'LOB';
            BEGIN
                FOR cons IN tab_cons LOOP
                    EXECUTE IMMEDIATE 'ALTER TABLE '||TableName||' DROP CONSTRAINT '||cons.constraint_name;
                END LOOP;
                FOR ind IN tab_ind LOOP
                    EXECUTE IMMEDIATE 'DROP INDEX '||ind.index_name;
                END LOOP;
            END;
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		-----------------------------------------------------------------------------
		-- KREW_ATT_T
		-----------------------------------------------------------------------------
		ALTER TABLE KREW_ATT_T RENAME TO TEMP_KREW_ATT_T
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE TABLE KREW_ATT_T (
			ATTACHMENT_ID	VARCHAR2(40),
			NTE_ID			VARCHAR2(40) NULL,
			FILE_NM			VARCHAR2(255) NOT NULL,
			FILE_LOC		VARCHAR2(255) NOT NULL,
			MIME_TYP		VARCHAR2(255) NOT NULL,
			VER_NBR			NUMBER(8,0) DEFAULT 0 NULL
		)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		INSERT /*+ APPEND PARALLEL(4) */ INTO KREW_ATT_T
		(ATTACHMENT_ID, NTE_ID, FILE_NM, FILE_LOC, MIME_TYP, VER_NBR)
		SELECT /*+ PARALLEL(4) */ CAST(ATTACHMENT_ID as VARCHAR2(40)), CAST(NTE_ID as VARCHAR2(40)), FILE_NM, FILE_LOC, MIME_TYP, VER_NBR
		FROM TEMP_KREW_ATT_T
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		COMMIT
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		ALTER TABLE KREW_ATT_T ADD CONSTRAINT KREW_ATT_TP1 PRIMARY KEY (ATTACHMENT_ID)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE INDEX KREW_ATT_TI1 ON KREW_ATT_T(NTE_ID)
		]]></sql>
		<!-- 
		<sql splitStatements="false"><![CDATA[
		DECLARE temp NUMBER;
		BEGIN
			SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'TEMP_KREW_ATT_T';
			IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE TEMP_KREW_ATT_T CASCADE CONSTRAINTS PURGE'; END IF;
		END;
		]]></sql>
		 -->
		<sql splitStatements="false"><![CDATA[
			DECLARE
				TableName VARCHAR2(30) := 'KREW_ACTN_ITM_T';
				CURSOR tab_cons IS
					SELECT constraint_name
						FROM user_constraints
						WHERE table_name = TableName 
						  AND constraint_type IN ( 'P', 'U', 'R' );
                CURSOR tab_ind IS
                    SELECT index_name
                        FROM user_indexes
                        WHERE table_name = TableName
                          AND index_type != 'LOB';
            BEGIN
                FOR cons IN tab_cons LOOP
                    EXECUTE IMMEDIATE 'ALTER TABLE '||TableName||' DROP CONSTRAINT '||cons.constraint_name;
                END LOOP;
                FOR ind IN tab_ind LOOP
                    EXECUTE IMMEDIATE 'DROP INDEX '||ind.index_name;
                END LOOP;
            END;
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		ALTER TABLE KREW_ACTN_ITM_T RENAME TO TEMP_KREW_ACTN_ITM_T
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE TABLE KREW_ACTN_ITM_T
		(
		      ACTN_ITM_ID VARCHAR2(40)
		        , PRNCPL_ID VARCHAR2(40) NOT NULL
		        , ASND_DT DATE NOT NULL
		        , RQST_CD CHAR(1) NOT NULL
		        , ACTN_RQST_ID VARCHAR2(40) NOT NULL
		        , DOC_HDR_ID VARCHAR2(40) NOT NULL
		        , ROLE_NM VARCHAR2(2000)
		        , DLGN_PRNCPL_ID VARCHAR2(40)
		        , DOC_HDR_TTL VARCHAR2(255)
		        , DOC_TYP_LBL VARCHAR2(128) NOT NULL
		        , DOC_HDLR_URL VARCHAR2(255) NOT NULL
		        , DOC_TYP_NM VARCHAR2(64) NOT NULL
		        , RSP_ID VARCHAR2(40) NOT NULL
		        , DLGN_TYP VARCHAR2(1)
		        , VER_NBR NUMBER(8) default 0
		        , DTYPE VARCHAR2(50)
		        , GRP_ID VARCHAR2(40)
		        , DLGN_GRP_ID VARCHAR2(40)
		        , RQST_LBL VARCHAR2(255)
		)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		INSERT /*+ APPEND PARALLEL(4) */  INTO KREW_ACTN_ITM_T
		(ACTN_ITM_ID, PRNCPL_ID, ASND_DT, RQST_CD, ACTN_RQST_ID, DOC_HDR_ID, ROLE_NM, DLGN_PRNCPL_ID, 
		 DOC_HDR_TTL, DOC_TYP_LBL, DOC_HDLR_URL, DOC_TYP_NM, RSP_ID, DLGN_TYP, VER_NBR, DTYPE, 
		 GRP_ID, DLGN_GRP_ID, RQST_LBL)
		SELECT /*+ PARALLEL(4) */  CAST(ACTN_ITM_ID as VARCHAR2(40)), PRNCPL_ID, ASND_DT, RQST_CD, CAST(ACTN_RQST_ID as VARCHAR2(40)), DOC_HDR_ID,
		 ROLE_NM, DLGN_PRNCPL_ID, 
		 DOC_HDR_TTL, DOC_TYP_LBL, DOC_HDLR_URL, DOC_TYP_NM, CAST(RSP_ID as VARCHAR2(40)), DLGN_TYP, VER_NBR, DTYPE, 
		 GRP_ID, DLGN_GRP_ID, RQST_LBL
		FROM TEMP_KREW_ACTN_ITM_T
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		COMMIT
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		ALTER TABLE KREW_ACTN_ITM_T
		    ADD CONSTRAINT KREW_ACTN_ITM_TP1
		PRIMARY KEY (ACTN_ITM_ID)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE INDEX KREW_ACTN_ITM_T1
		  ON KREW_ACTN_ITM_T 
		  (PRNCPL_ID)  PARALLEL 4
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE INDEX KREW_ACTN_ITM_TI2
		  ON KREW_ACTN_ITM_T
		  (DOC_HDR_ID)  PARALLEL 4
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE INDEX KREW_ACTN_ITM_TI3
		  ON KREW_ACTN_ITM_T
		  (ACTN_RQST_ID)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE INDEX KREW_ACTN_ITM_TI5
		  ON KREW_ACTN_ITM_T
		  (PRNCPL_ID, DLGN_TYP, DOC_HDR_ID)  PARALLEL 4
		]]></sql>
		<!-- 
		<sql splitStatements="false"><![CDATA[
		DECLARE temp NUMBER;
		BEGIN
			SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'TEMP_KREW_ACTN_ITM_T';
			IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE TEMP_KREW_ACTN_ITM_T CASCADE CONSTRAINTS PURGE'; END IF;
		END;
		]]></sql>
		 -->
		<sql splitStatements="false"><![CDATA[
			DECLARE
				TableName VARCHAR2(30) := 'KREW_ACTN_TKN_T';
				CURSOR tab_cons IS
					SELECT constraint_name
						FROM user_constraints
						WHERE table_name = TableName 
						  AND constraint_type IN ( 'P', 'U', 'R' );
                CURSOR tab_ind IS
                    SELECT index_name
                        FROM user_indexes
                        WHERE table_name = TableName
                          AND index_type != 'LOB';
            BEGIN
                FOR cons IN tab_cons LOOP
                    EXECUTE IMMEDIATE 'ALTER TABLE '||TableName||' DROP CONSTRAINT '||cons.constraint_name;
                END LOOP;
                FOR ind IN tab_ind LOOP
                    EXECUTE IMMEDIATE 'DROP INDEX '||ind.index_name;
                END LOOP;
            END;
		]]></sql>

		<sql splitStatements="false"><![CDATA[
		ALTER TABLE KREW_ACTN_TKN_T RENAME TO TEMP_KREW_ACTN_TKN_T
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE TABLE KREW_ACTN_TKN_T
		(
		      ACTN_TKN_ID VARCHAR2(40)
		        , DOC_HDR_ID VARCHAR2(40) NOT NULL
		        , PRNCPL_ID VARCHAR2(40) NOT NULL
		        , DLGTR_PRNCPL_ID VARCHAR2(40)
		        , ACTN_CD CHAR(1) NOT NULL
		        , ACTN_DT DATE NOT NULL
		        , DOC_VER_NBR NUMBER(8) NOT NULL
		        , ANNOTN VARCHAR2(2000)
		        , CUR_IND NUMBER(1) default 1
		        , VER_NBR NUMBER(8) default 0
		        , DLGTR_GRP_ID VARCHAR2(40)
		)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		INSERT /*+ APPEND PARALLEL(4) */  INTO KREW_ACTN_TKN_T
		(ACTN_TKN_ID, DOC_HDR_ID, PRNCPL_ID, DLGTR_PRNCPL_ID, ACTN_CD, ACTN_DT, DOC_VER_NBR, ANNOTN, 
		CUR_IND, VER_NBR, DLGTR_GRP_ID)
		SELECT /*+ PARALLEL(4) */  CAST(ACTN_TKN_ID as VARCHAR2(40)), DOC_HDR_ID, PRNCPL_ID, DLGTR_PRNCPL_ID, ACTN_CD, ACTN_DT, DOC_VER_NBR, ANNOTN,
		CUR_IND, VER_NBR, DLGTR_GRP_ID
		FROM TEMP_KREW_ACTN_TKN_T
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		COMMIT
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		ALTER TABLE KREW_ACTN_TKN_T
		    ADD CONSTRAINT KREW_ACTN_TKN_TP1
		PRIMARY KEY (ACTN_TKN_ID)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE INDEX KREW_ACTN_TKN_TI1 
		  ON KREW_ACTN_TKN_T 
		  (DOC_HDR_ID, PRNCPL_ID)  PARALLEL 4
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE INDEX KREW_ACTN_TKN_TI2 
		  ON KREW_ACTN_TKN_T 
		  (DOC_HDR_ID, PRNCPL_ID, ACTN_CD)  PARALLEL 4
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE INDEX KREW_ACTN_TKN_TI3 
		  ON KREW_ACTN_TKN_T 
		  (PRNCPL_ID)  PARALLEL 4
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE INDEX KREW_ACTN_TKN_TI4 
		  ON KREW_ACTN_TKN_T 
		  (DLGTR_PRNCPL_ID)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE INDEX KREW_ACTN_TKN_TI5 
		  ON KREW_ACTN_TKN_T 
		  (DOC_HDR_ID)  PARALLEL 4
		]]></sql>

                <!-- <sql splitStatements="false"><![CDATA[
		DECLARE temp NUMBER;
		BEGIN
			SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'TEMP_KREW_ACTN_TKN_T';
			IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE TEMP_KREW_ACTN_TKN_T CASCADE CONSTRAINTS PURGE'; END IF;
		END;
		]]></sql> -->
		<sql splitStatements="false"><![CDATA[
			DECLARE
				TableName VARCHAR2(30) := 'KREW_ACTN_RQST_T';
				CURSOR tab_cons IS
					SELECT constraint_name
						FROM user_constraints
						WHERE table_name = TableName 
						  AND constraint_type IN ( 'P', 'U', 'R' );
                CURSOR tab_ind IS
                    SELECT index_name
                        FROM user_indexes
                        WHERE table_name = TableName
                          AND index_type != 'LOB';
            BEGIN
                FOR cons IN tab_cons LOOP
                    EXECUTE IMMEDIATE 'ALTER TABLE '||TableName||' DROP CONSTRAINT '||cons.constraint_name;
                END LOOP;
                FOR ind IN tab_ind LOOP
                    EXECUTE IMMEDIATE 'DROP INDEX '||ind.index_name;
                END LOOP;
            END;
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		ALTER TABLE KREW_ACTN_RQST_T RENAME TO TEMP_KREW_ACTN_RQST_T
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE TABLE KREW_ACTN_RQST_T
		(
		      ACTN_RQST_ID VARCHAR2(40)
		        , PARNT_ID VARCHAR2(40)
		        , ACTN_RQST_CD CHAR(1) NOT NULL
		        , DOC_HDR_ID VARCHAR2(40) NOT NULL
		        , RULE_ID VARCHAR2(40)
		        , STAT_CD CHAR(1) NOT NULL
		        , RSP_ID VARCHAR2(40) NOT NULL
		        , PRNCPL_ID VARCHAR2(40)
		        , ROLE_NM VARCHAR2(2000)
		        , QUAL_ROLE_NM VARCHAR2(2000)
		        , QUAL_ROLE_NM_LBL_TXT VARCHAR2(2000)
		        , RECIP_TYP_CD CHAR(1)
		        , PRIO_NBR NUMBER(8) NOT NULL
		        , RTE_TYP_NM VARCHAR2(255)
		        , RTE_LVL_NBR NUMBER(8) NOT NULL
		        , RTE_NODE_INSTN_ID VARCHAR2(40)
		        , ACTN_TKN_ID VARCHAR2(40)
		        , DOC_VER_NBR NUMBER(8) NOT NULL
		        , CRTE_DT DATE NOT NULL
		        , RSP_DESC_TXT VARCHAR2(200)
		        , FRC_ACTN NUMBER(1) default 0
		        , ACTN_RQST_ANNOTN_TXT VARCHAR2(2000)
		        , DLGN_TYP CHAR(1)
		        , APPR_PLCY CHAR(1)
		        , CUR_IND NUMBER(1) default 1
		        , VER_NBR NUMBER(8) default 0
		        , GRP_ID VARCHAR2(40)
		        , RQST_LBL VARCHAR2(255)
		)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		INSERT /*+ APPEND PARALLEL(4) */ INTO KREW_ACTN_RQST_T
		(ACTN_RQST_ID, PARNT_ID, ACTN_RQST_CD, DOC_HDR_ID, RULE_ID, STAT_CD, RSP_ID, PRNCPL_ID, 
		ROLE_NM, QUAL_ROLE_NM, QUAL_ROLE_NM_LBL_TXT, RECIP_TYP_CD, PRIO_NBR, RTE_TYP_NM, 
		RTE_LVL_NBR, RTE_NODE_INSTN_ID, ACTN_TKN_ID, DOC_VER_NBR, CRTE_DT, RSP_DESC_TXT, 
		FRC_ACTN, ACTN_RQST_ANNOTN_TXT, DLGN_TYP, APPR_PLCY, CUR_IND, VER_NBR, GRP_ID, RQST_LBL)
		SELECT /*+ PARALLEL(4) */ CAST(ACTN_RQST_ID as VARCHAR2(40)), CAST(PARNT_ID as VARCHAR2(40)),
		ACTN_RQST_CD, DOC_HDR_ID, CAST(RULE_ID as VARCHAR2(40)), STAT_CD, CAST(RSP_ID as VARCHAR2(40)), PRNCPL_ID, 
		ROLE_NM, QUAL_ROLE_NM, QUAL_ROLE_NM_LBL_TXT, RECIP_TYP_CD, PRIO_NBR, RTE_TYP_NM, 
		RTE_LVL_NBR, CAST(RTE_NODE_INSTN_ID as VARCHAR2(40)), CAST(ACTN_TKN_ID as VARCHAR2(40)), DOC_VER_NBR, 
		CRTE_DT, RSP_DESC_TXT, 
		FRC_ACTN, ACTN_RQST_ANNOTN_TXT, DLGN_TYP, APPR_PLCY, CUR_IND, VER_NBR, GRP_ID, RQST_LBL
		FROM TEMP_KREW_ACTN_RQST_T
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		COMMIT
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		ALTER TABLE KREW_ACTN_RQST_T
		    ADD CONSTRAINT KREW_ACTN_RQST_TP1
		PRIMARY KEY (ACTN_RQST_ID)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE INDEX KREW_ACTN_RQST_T11 
		  ON KREW_ACTN_RQST_T 
		  (DOC_HDR_ID)  PARALLEL 4
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE INDEX KREW_ACTN_RQST_T12 
		  ON KREW_ACTN_RQST_T 
		  (PRNCPL_ID)  PARALLEL 4
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE INDEX KREW_ACTN_RQST_T13 
		  ON KREW_ACTN_RQST_T 
		  (ACTN_TKN_ID)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE INDEX KREW_ACTN_RQST_T14 
		  ON KREW_ACTN_RQST_T 
		  (PARNT_ID)  PARALLEL 4
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE INDEX KREW_ACTN_RQST_T15 
		  ON KREW_ACTN_RQST_T 
		  (RSP_ID)  PARALLEL 4
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE INDEX KREW_ACTN_RQST_T16 
		  ON KREW_ACTN_RQST_T 
		  (STAT_CD, RSP_ID)  PARALLEL 4
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE INDEX KREW_ACTN_RQST_T17 
		  ON KREW_ACTN_RQST_T 
		  (RTE_NODE_INSTN_ID)  PARALLEL 4
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE INDEX KREW_ACTN_RQST_T19 
		  ON KREW_ACTN_RQST_T 
		  (STAT_CD, DOC_HDR_ID)  PARALLEL 4
		]]></sql>

                <!-- <sql splitStatements="false"><![CDATA[
		DECLARE temp NUMBER;
		BEGIN
			SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'TEMP_KREW_ACTN_RQST_T';
			IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE TEMP_KREW_ACTN_RQST_T CASCADE CONSTRAINTS PURGE'; END IF;
		END;
		]]></sql> -->
		<sql splitStatements="false"><![CDATA[
			DECLARE
				TableName VARCHAR2(30) := 'KREW_RULE_TMPL_T';
				CURSOR tab_cons IS
					SELECT constraint_name
						FROM user_constraints
						WHERE table_name = TableName 
						  AND constraint_type IN ( 'P', 'U', 'R' );
                CURSOR tab_ind IS
                    SELECT index_name
                        FROM user_indexes
                        WHERE table_name = TableName
                          AND index_type != 'LOB';
            BEGIN
                FOR cons IN tab_cons LOOP
                    EXECUTE IMMEDIATE 'ALTER TABLE '||TableName||' DROP CONSTRAINT '||cons.constraint_name;
                END LOOP;
                FOR ind IN tab_ind LOOP
                    EXECUTE IMMEDIATE 'DROP INDEX '||ind.index_name;
                END LOOP;
            END;
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		ALTER TABLE KREW_RULE_TMPL_T RENAME TO TEMP_KREW_RULE_TMPL_T
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE TABLE KREW_RULE_TMPL_T
		(
		      RULE_TMPL_ID VARCHAR2(40)
		        , NM VARCHAR2(250) NOT NULL
		        , RULE_TMPL_DESC VARCHAR2(2000)
		        , DLGN_RULE_TMPL_ID VARCHAR2(40)
		        , VER_NBR NUMBER(8) default 0
		        , OBJ_ID VARCHAR2(36) NOT NULL
		    
		    , CONSTRAINT KREW_RULE_TMPL_TC0 UNIQUE (OBJ_ID)
		    , CONSTRAINT KREW_RULE_TMPL_TI1 UNIQUE (NM)
		)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		INSERT /*+ APPEND PARALLEL(4) */ INTO KREW_RULE_TMPL_T
		(RULE_TMPL_ID, NM, RULE_TMPL_DESC, DLGN_RULE_TMPL_ID, VER_NBR, OBJ_ID)
		SELECT /*+ PARALLEL(4) */ CAST(RULE_TMPL_ID as VARCHAR2(40)), NM, RULE_TMPL_DESC, CAST(DLGN_RULE_TMPL_ID as VARCHAR2(40)),
		VER_NBR, OBJ_ID
		FROM TEMP_KREW_RULE_TMPL_T
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		COMMIT
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		ALTER TABLE KREW_RULE_TMPL_T
		    ADD CONSTRAINT KREW_RULE_TMPL_TP1
		PRIMARY KEY (RULE_TMPL_ID)
		]]></sql>
		<!-- <sql splitStatements="false"><![CDATA[
		DECLARE temp NUMBER;
		BEGIN
			SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'TEMP_KREW_RULE_TMPL_T';
			IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE TEMP_KREW_RULE_TMPL_T CASCADE CONSTRAINTS PURGE'; END IF;
		END;
		]]></sql> -->
		<sql splitStatements="false"><![CDATA[
			DECLARE
				TableName VARCHAR2(30) := 'KREW_RULE_TMPL_ATTR_T';
				CURSOR tab_cons IS
					SELECT constraint_name
						FROM user_constraints
						WHERE table_name = TableName 
						  AND constraint_type IN ( 'P', 'U', 'R' );
                CURSOR tab_ind IS
                    SELECT index_name
                        FROM user_indexes
                        WHERE table_name = TableName
                          AND index_type != 'LOB';
            BEGIN
                FOR cons IN tab_cons LOOP
                    EXECUTE IMMEDIATE 'ALTER TABLE '||TableName||' DROP CONSTRAINT '||cons.constraint_name;
                END LOOP;
                FOR ind IN tab_ind LOOP
                    EXECUTE IMMEDIATE 'DROP INDEX '||ind.index_name;
                END LOOP;
            END;
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		ALTER TABLE KREW_RULE_TMPL_ATTR_T RENAME TO TEMP_KREW_RULE_TMPL_ATTR_T
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE TABLE KREW_RULE_TMPL_ATTR_T
		(
		      RULE_TMPL_ATTR_ID VARCHAR2(40)
		        , RULE_TMPL_ID VARCHAR2(40) NOT NULL
		        , RULE_ATTR_ID VARCHAR2(40) NOT NULL
		        , REQ_IND NUMBER(1) NOT NULL
		        , ACTV_IND NUMBER(1) NOT NULL
		        , DSPL_ORD NUMBER(5) NOT NULL
		        , DFLT_VAL VARCHAR2(2000)
		        , VER_NBR NUMBER(8) default 0
		        , OBJ_ID VARCHAR2(36) NOT NULL
		    , CONSTRAINT KREW_RULE_TMPL_ATTR_TC0 UNIQUE (OBJ_ID)
		)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		INSERT /*+ APPEND PARALLEL(4) */ INTO KREW_RULE_TMPL_ATTR_T
		(RULE_TMPL_ATTR_ID, RULE_TMPL_ID, RULE_ATTR_ID, REQ_IND, ACTV_IND, DSPL_ORD, DFLT_VAL, VER_NBR, OBJ_ID)
		SELECT /*+ PARALLEL(4) */
		CAST(RULE_TMPL_ATTR_ID as VARCHAR2(40)), CAST(RULE_TMPL_ID as VARCHAR2(40)), 
		CAST(RULE_ATTR_ID as VARCHAR2(40)), REQ_IND, ACTV_IND, DSPL_ORD, DFLT_VAL, VER_NBR, OBJ_ID
		FROM TEMP_KREW_RULE_TMPL_ATTR_T
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		COMMIT
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		ALTER TABLE KREW_RULE_TMPL_ATTR_T
		    ADD CONSTRAINT KREW_RULE_TMPL_ATTR_TP1
		PRIMARY KEY (RULE_TMPL_ATTR_ID)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE INDEX KREW_RULE_TMPL_ATTR_TI1 
		  ON KREW_RULE_TMPL_ATTR_T 
		  (RULE_TMPL_ID)  PARALLEL 4
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE INDEX KREW_RULE_TMPL_ATTR_TI2 
		  ON KREW_RULE_TMPL_ATTR_T 
		  (RULE_ATTR_ID)  PARALLEL 4
		]]></sql>
		<!-- <sql splitStatements="false"><![CDATA[
		DECLARE temp NUMBER;
		BEGIN
			SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'TEMP_KREW_RULE_TMPL_ATTR_T';
			IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE TEMP_KREW_RULE_TMPL_ATTR_T CASCADE CONSTRAINTS PURGE'; END IF;
		END;
		]]></sql> -->
		<sql splitStatements="false"><![CDATA[
			DECLARE
				TableName VARCHAR2(30) := 'KREW_RULE_T';
				CURSOR tab_cons IS
					SELECT constraint_name
						FROM user_constraints
						WHERE table_name = TableName 
						  AND constraint_type IN ( 'P', 'U', 'R' );
                CURSOR tab_ind IS
                    SELECT index_name
                        FROM user_indexes
                        WHERE table_name = TableName
                          AND index_type != 'LOB';
            BEGIN
                FOR cons IN tab_cons LOOP
                    EXECUTE IMMEDIATE 'ALTER TABLE '||TableName||' DROP CONSTRAINT '||cons.constraint_name;
                END LOOP;
                FOR ind IN tab_ind LOOP
                    EXECUTE IMMEDIATE 'DROP INDEX '||ind.index_name;
                END LOOP;
            END;
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		ALTER TABLE KREW_RULE_T RENAME TO TEMP_KREW_RULE_T
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE TABLE KREW_RULE_T
		(
		      RULE_ID VARCHAR2(40)
		        , NM VARCHAR2(256)
		        , RULE_TMPL_ID VARCHAR2(40)
		        , RULE_EXPR_ID VARCHAR2(40)
		        , ACTV_IND NUMBER(1) NOT NULL
		        , RULE_BASE_VAL_DESC VARCHAR2(2000)
		        , FRC_ACTN NUMBER(1) NOT NULL
		        , DOC_TYP_NM VARCHAR2(64) NOT NULL
		        , DOC_HDR_ID VARCHAR2(40)
		        , TMPL_RULE_IND NUMBER(1)
		        , FRM_DT DATE
		        , TO_DT DATE
		        , DACTVN_DT DATE
		        , CUR_IND NUMBER(1) default 0
		        , RULE_VER_NBR NUMBER(8) default 0
		        , DLGN_IND NUMBER(1)
		        , PREV_RULE_VER_NBR VARCHAR2(40)
		        , ACTVN_DT DATE
		        , VER_NBR NUMBER(8) default 0
		        , OBJ_ID VARCHAR2(36) NOT NULL
		    , CONSTRAINT KREW_RULE_TC0 UNIQUE (OBJ_ID)
		)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		INSERT /*+ APPEND PARALLEL(4) */ INTO KREW_RULE_T
		(RULE_ID, NM, RULE_TMPL_ID, RULE_EXPR_ID, ACTV_IND, RULE_BASE_VAL_DESC, FRC_ACTN, 
		DOC_TYP_NM, DOC_HDR_ID, TMPL_RULE_IND, FRM_DT, TO_DT, DACTVN_DT, CUR_IND, RULE_VER_NBR, 
		DLGN_IND, PREV_RULE_VER_NBR, ACTVN_DT, VER_NBR, OBJ_ID)
		SELECT /*+ PARALLEL(4) */
		CAST(RULE_ID as VARCHAR2(40)), NM, CAST(RULE_TMPL_ID as VARCHAR2(40)), CAST(RULE_EXPR_ID as VARCHAR2(40)), 
		ACTV_IND, RULE_BASE_VAL_DESC, FRC_ACTN, 
		DOC_TYP_NM, DOC_HDR_ID, TMPL_RULE_IND, FRM_DT, TO_DT, DACTVN_DT, CUR_IND, RULE_VER_NBR, 
		DLGN_IND, CAST(PREV_RULE_VER_NBR as VARCHAR2(40)), ACTVN_DT, VER_NBR, OBJ_ID
		FROM TEMP_KREW_RULE_T
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		COMMIT
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		ALTER TABLE KREW_RULE_T
		    ADD CONSTRAINT KREW_RULE_TP1
		PRIMARY KEY (RULE_ID)
		]]></sql>
		<!-- <sql splitStatements="false"><![CDATA[
		DECLARE temp NUMBER;
		BEGIN
			SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'TEMP_KREW_RULE_T';
			IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE TEMP_KREW_RULE_T CASCADE CONSTRAINTS PURGE'; END IF;
		END;
		]]></sql> -->
		<sql splitStatements="false"><![CDATA[
			DECLARE
				TableName VARCHAR2(30) := 'KREW_DLGN_RSP_T';
				CURSOR tab_cons IS
					SELECT constraint_name
						FROM user_constraints
						WHERE table_name = TableName 
						  AND constraint_type IN ( 'P', 'U', 'R' );
                CURSOR tab_ind IS
                    SELECT index_name
                        FROM user_indexes
                        WHERE table_name = TableName
                          AND index_type != 'LOB';
            BEGIN
                FOR cons IN tab_cons LOOP
                    EXECUTE IMMEDIATE 'ALTER TABLE '||TableName||' DROP CONSTRAINT '||cons.constraint_name;
                END LOOP;
                FOR ind IN tab_ind LOOP
                    EXECUTE IMMEDIATE 'DROP INDEX '||ind.index_name;
                END LOOP;
            END;
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		ALTER TABLE KREW_DLGN_RSP_T RENAME TO TEMP_KREW_DLGN_RSP_T
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE TABLE KREW_DLGN_RSP_T
		(
		      DLGN_RULE_ID VARCHAR2(40)
		        , RSP_ID VARCHAR2(40) NOT NULL
		        , DLGN_RULE_BASE_VAL_ID VARCHAR2(40) NOT NULL
		        , DLGN_TYP VARCHAR2(20) NOT NULL
		        , VER_NBR NUMBER(8) default 0
		        , OBJ_ID VARCHAR2(36) NOT NULL
		    , CONSTRAINT KREW_DLGN_RSP_TC0 UNIQUE (OBJ_ID)
		)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		INSERT /*+ APPEND PARALLEL(4) */  INTO KREW_DLGN_RSP_T
		(DLGN_RULE_ID, RSP_ID, DLGN_RULE_BASE_VAL_ID, DLGN_TYP, VER_NBR, OBJ_ID)
		SELECT /*+ PARALLEL(4) */
		CAST(DLGN_RULE_ID as VARCHAR2(40)), CAST(RSP_ID as VARCHAR2(40)), CAST(DLGN_RULE_BASE_VAL_ID as VARCHAR2(40)), 
		DLGN_TYP, VER_NBR, OBJ_ID
		FROM TEMP_KREW_DLGN_RSP_T
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		COMMIT
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		ALTER TABLE KREW_DLGN_RSP_T
		    ADD CONSTRAINT KREW_DLGN_RSP_TP1
		PRIMARY KEY (DLGN_RULE_ID)
		]]></sql>
		<!-- <sql splitStatements="false"><![CDATA[
		DECLARE temp NUMBER;
		BEGIN
			SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'TEMP_KREW_DLGN_RSP_T';
			IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE TEMP_KREW_DLGN_RSP_T CASCADE CONSTRAINTS PURGE'; END IF;
		END;
		]]></sql> -->
		<sql splitStatements="false"><![CDATA[
			DECLARE
				TableName VARCHAR2(30) := 'KREW_RULE_RSP_T';
				CURSOR tab_cons IS
					SELECT constraint_name
						FROM user_constraints
						WHERE table_name = TableName 
						  AND constraint_type IN ( 'P', 'U', 'R' );
                CURSOR tab_ind IS
                    SELECT index_name
                        FROM user_indexes
                        WHERE table_name = TableName
                          AND index_type != 'LOB';
            BEGIN
                FOR cons IN tab_cons LOOP
                    EXECUTE IMMEDIATE 'ALTER TABLE '||TableName||' DROP CONSTRAINT '||cons.constraint_name;
                END LOOP;
                FOR ind IN tab_ind LOOP
                    EXECUTE IMMEDIATE 'DROP INDEX '||ind.index_name;
                END LOOP;
            END;
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		ALTER TABLE KREW_RULE_RSP_T RENAME TO TEMP_KREW_RULE_RSP_T
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE TABLE KREW_RULE_RSP_T
		(
		      RULE_RSP_ID VARCHAR2(40)
		        , RSP_ID VARCHAR2(40) NOT NULL
		        , RULE_ID VARCHAR2(40) NOT NULL
		        , PRIO NUMBER(5)
		        , ACTN_RQST_CD VARCHAR2(2000)
		        , NM VARCHAR2(200)
		        , TYP VARCHAR2(1)
		        , APPR_PLCY CHAR(1)
		        , VER_NBR NUMBER(8) default 0
		        , OBJ_ID VARCHAR2(36) NOT NULL
		    , CONSTRAINT KREW_RULE_RSP_TC0 UNIQUE (OBJ_ID)
		)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		INSERT /*+ APPEND PARALLEL(4) */ INTO KREW_RULE_RSP_T
		(RULE_RSP_ID, RSP_ID, RULE_ID, PRIO, ACTN_RQST_CD, NM, TYP, APPR_PLCY, VER_NBR, OBJ_ID)
		SELECT /*+ PARALLEL(4) */ CAST(RULE_RSP_ID as VARCHAR2(40)), CAST(RSP_ID as VARCHAR2(40)), CAST(RULE_ID as VARCHAR2(40)),
		PRIO, ACTN_RQST_CD, NM, TYP, APPR_PLCY, VER_NBR, OBJ_ID
		FROM TEMP_KREW_RULE_RSP_T
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		COMMIT
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		ALTER TABLE KREW_RULE_RSP_T
		    ADD CONSTRAINT KREW_RULE_RSP_TP1
		PRIMARY KEY (RULE_RSP_ID)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE INDEX KREW_RULE_RSP_TI1 
		  ON KREW_RULE_RSP_T 
		  (RULE_ID)  PARALLEL 4
		]]></sql>
		<!-- <sql splitStatements="false"><![CDATA[
		DECLARE temp NUMBER;
		BEGIN
			SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'TEMP_KREW_RULE_RSP_T';
			IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE TEMP_KREW_RULE_RSP_T CASCADE CONSTRAINTS PURGE'; END IF;
		END;
		]]></sql> -->
		<sql splitStatements="false"><![CDATA[
			DECLARE
				TableName VARCHAR2(30) := 'KREW_RULE_EXT_T';
				CURSOR tab_cons IS
					SELECT constraint_name
						FROM user_constraints
						WHERE table_name = TableName 
						  AND constraint_type IN ( 'P', 'U', 'R' );
                CURSOR tab_ind IS
                    SELECT index_name
                        FROM user_indexes
                        WHERE table_name = TableName
                          AND index_type != 'LOB';
            BEGIN
                FOR cons IN tab_cons LOOP
                    EXECUTE IMMEDIATE 'ALTER TABLE '||TableName||' DROP CONSTRAINT '||cons.constraint_name;
                END LOOP;
                FOR ind IN tab_ind LOOP
                    EXECUTE IMMEDIATE 'DROP INDEX '||ind.index_name;
                END LOOP;
            END;
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		ALTER TABLE KREW_RULE_EXT_T RENAME TO TEMP_KREW_RULE_EXT_T
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE TABLE KREW_RULE_EXT_T
		(
		      RULE_EXT_ID VARCHAR2(40)
		        , RULE_TMPL_ATTR_ID VARCHAR2(40) NOT NULL
		        , RULE_ID VARCHAR2(40) NOT NULL
		        , VER_NBR NUMBER(8) default 0
		)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		INSERT /*+ APPEND PARALLEL(4) */ INTO KREW_RULE_EXT_T
		(RULE_EXT_ID, RULE_TMPL_ATTR_ID, RULE_ID, VER_NBR)
		SELECT /*+ PARALLEL(4) */ CAST(RULE_EXT_ID as VARCHAR2(40)), CAST(RULE_TMPL_ATTR_ID as VARCHAR2(40)),
		CAST(RULE_ID as VARCHAR2(40)), VER_NBR 
		FROM TEMP_KREW_RULE_EXT_T
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		COMMIT
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		ALTER TABLE KREW_RULE_EXT_T
		    ADD CONSTRAINT KREW_RULE_EXT_TP1
		PRIMARY KEY (RULE_EXT_ID)
		]]></sql>
		<sql splitStatements="false"><![CDATA[
		CREATE INDEX KREW_RULE_EXT_T1 
		  ON KREW_RULE_EXT_T 
		  (RULE_ID)  PARALLEL 4
		]]></sql>
		<!-- <sql splitStatements="false"><![CDATA[
		DECLARE temp NUMBER;
		BEGIN
			SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'TEMP_KREW_RULE_EXT_T';
			IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE TEMP_KREW_RULE_EXT_T CASCADE CONSTRAINTS PURGE'; END IF;
		END;
		]]></sql> -->
		<sql splitStatements="false"><![CDATA[
			DECLARE
				TableName VARCHAR2(30) := 'KREW_RTE_NODE_T';
				CURSOR tab_cons IS
					SELECT constraint_name
						FROM user_constraints
						WHERE table_name = TableName 
						  AND constraint_type IN ( 'P', 'U', 'R' );
                CURSOR tab_ind IS
                    SELECT index_name
                        FROM user_indexes
                        WHERE table_name = TableName
                          AND index_type != 'LOB';
            BEGIN
                FOR cons IN tab_cons LOOP
                    EXECUTE IMMEDIATE 'ALTER TABLE '||TableName||' DROP CONSTRAINT '||cons.constraint_name;
                END LOOP;
                FOR ind IN tab_ind LOOP
                    EXECUTE IMMEDIATE 'DROP INDEX '||ind.index_name;
                END LOOP;
            END;
		]]></sql>
</changeSet>
</databaseChangeLog>
